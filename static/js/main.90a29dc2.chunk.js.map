{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","searchBox","placeholder","handleChange","type","onChange","App","state","searchField","fetch","then","response","json","res","setState","this","filteredMonsters","filter","toLowerCase","includes","e","target","value","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iTAIe,SAASA,EAAKC,GACzB,OACI,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACtB,6BAA4BL,EAAMI,QAAQE,MAAjCN,EAAMI,QAAQC,IACvB,4BAAIL,EAAMI,QAAQG,WCL9B,IAeeC,EAfE,SAAAR,GAEb,OAEI,qBAAKC,UAAU,YAAf,SAEID,EAAMS,SAASC,KAAI,SAAAN,GAAO,OACvB,cAACL,EAAD,CAAMK,QAASA,U,MCRf,SAASO,EAAT,GAAgD,IAA5BC,EAA2B,EAA3BA,YAAYC,EAAe,EAAfA,aAC3C,OACI,8BACI,uBAAOZ,UAAU,SAASa,KAAK,SAASF,YAAaA,EAAaG,SAAUF,M,ICyDzEG,E,kDAzDb,aAAc,IAAD,8BACX,gBAEKC,MAAM,CACTR,SAAS,GACTS,YAAY,IALH,E,gEASO,IAAD,OACnBC,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAEA,EAASC,UACxBF,MAAK,SAAAG,GAAG,OAAE,EAAKC,SAAS,CAACf,SAASc,S,+BAE1B,IAAD,SAEyBE,KAAKR,MAA7BR,EAFD,EAECA,SAASS,EAFV,EAEUA,YACVQ,EAAmBjB,EAASkB,QAAO,SAAAvB,GAAO,OAAEA,EAAQE,KAAKsB,cAAcC,SAASX,EAAYU,kBAElG,OAEE,sBAAK3B,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CAAWY,aAAc,SAAAiB,GAAC,OAAE,EAAKN,SAAS,CAACN,YAAYY,EAAEC,OAAOC,SAASpB,YAAY,oBACrF,cAAC,EAAD,CAAUH,SAAUiB,W,GAzBVO,IAAMC,WCOTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjB,MAAK,YAAkD,IAA/CkB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.90a29dc2.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.styles.css';\r\n\r\n\r\nexport default function Card(props) {\r\n    return (\r\n        <div className='card-container'>\r\n            <img alt=\"monster\" src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}/>\r\n            <h2 key={props.monster.id}>{props.monster.name}</h2>\r\n            <p>{props.monster.email}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport '../card-list/card-list.styles.css';\r\nimport Card from '../card/card.component';\r\n\r\nconst CardList = props => {\r\n    \r\n    return (\r\n        \r\n        <div className='card-list'>\r\n           \r\n           {props.monsters.map(monster=>(\r\n               <Card monster={monster}/>\r\n        \r\n        ))}\r\n    \r\n        </div>\r\n    )\r\n};\r\n\r\nexport default CardList;\r\n","import React from 'react';\r\nimport './search-box.styles.css';\r\n\r\nexport default function searchBox({placeholder,handleChange}) {\r\n    return (\r\n        <div >\r\n            <input className=\"search\" type=\"search\" placeholder={placeholder} onChange={handleChange}></input>\r\n        </div>\r\n    )\r\n}\r\n","import './App.css';\nimport React from 'react';\nimport CardList from './components/card-list/card-list.component';\nimport SearchBox from './components/search-box/search-box.component';\n\nclass App extends React.Component{\n  constructor(){\n    super();\n\n    this.state={\n      monsters:[],\n      searchField:''\n    };\n  }\n\n  componentDidMount(){\n  fetch('https://jsonplaceholder.typicode.com/users')\n  .then(response=>response.json())\n  .then(res=>this.setState({monsters:res}))\n  }\n  render(){\n\n    const {monsters,searchField} = this.state;\n    const filteredMonsters = monsters.filter(monster=>monster.name.toLowerCase().includes(searchField.toLowerCase()))\n\n    return(\n\n      <div className=\"App\">\n        <h1>Monsters-Rolodex</h1>\n        <SearchBox handleChange={e=>this.setState({searchField:e.target.value})} placeholder=\"search monsters\" />\n        <CardList monsters={filteredMonsters}/>\n        \n      </div>\n    )\n  }\n}\n\n\n\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Edit <code>src/App.js</code> and save to reload.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//   );\n// }\n\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}